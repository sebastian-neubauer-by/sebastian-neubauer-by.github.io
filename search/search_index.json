{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to DevCon Workshop: Platform at Your Fingertips Registration Note If you want ot participate in the workshop, you need an account first. Please create your account well in advance as your request needs to be checked. Here you can request your account here Click on 'Register Here' Make sure you fill out all the required fields Make sure you fill out all the required fields and make sure it is a valid phone number (you can check here ). Also make sure to use your company email address. Otherwise the approval might fail. If you do not receive an email within 24h (manual approval required), please contact Sebastian.Neubauer@blueyonder.com Once you received an email with a temporary password, login and change your password upon first login. That's it, you should now be onboarded to the Luminate Platform!","title":"Registration"},{"location":"#welcome-to-devcon","text":"","title":"Welcome to DevCon"},{"location":"#workshop-platform-at-your-fingertips","text":"","title":"Workshop: Platform at Your Fingertips"},{"location":"#registration","text":"Note If you want ot participate in the workshop, you need an account first. Please create your account well in advance as your request needs to be checked. Here you can request your account here Click on 'Register Here' Make sure you fill out all the required fields Make sure you fill out all the required fields and make sure it is a valid phone number (you can check here ). Also make sure to use your company email address. Otherwise the approval might fail. If you do not receive an email within 24h (manual approval required), please contact Sebastian.Neubauer@blueyonder.com Once you received an email with a temporary password, login and change your password upon first login. That's it, you should now be onboarded to the Luminate Platform!","title":"Registration"},{"location":"introduction/","text":"Introduction","title":"Introduction"},{"location":"introduction/#introduction","text":"","title":"Introduction"},{"location":"story/","text":"The Story The Products In our Blue Yonder products portfolio we have two products that are tightly coupled to one each other. It is Luminate Demand Edge (LDE), our demand forecasting solution for Retail and Luminate Store Fulfilment (LSF), our solution to automated and optimized orders based on demand predictions. LSF takes the demand predictions of LSF and turns them into order proposals using sophisticated algorithms. In LDE, the customer is able to override the demand predictions generated by LDE and LSF would pickup those overridden demand predicitons automatically. The Override Prediction Incident CC BY-SA 3.0 Daniel Case James is a supply chain specialist working at one of Blue yonder's customer, a grocery store and is responsible for the LSF product. Today, James has a very bad day, all shelves are empty in one of the stores. That's not good. But happened? It turns out, there is a big festival happeing next to this store. It turns out, Susan, a demand specialist working at the same customer but responsible for the demand predictions of LDE product indeed adjusted the demands using predictions overrides. But why were the orders not adjusted as well? LSF typically run at fixed daily schedules and if the prediction overrides are created after the LSF run already processed for the day, the predictions overrides will only be picked up at the next run which in this case was too late. James, who has some basic knowledge of programming, decides to use the extensibility features of the Luminate Platform and build a notification mechanism. This will help him to prevent any of these kind of incidents in the future. Let's help James and build this feature together with him!","title":"The Story"},{"location":"story/#the-story","text":"","title":"The Story"},{"location":"story/#the-products","text":"In our Blue Yonder products portfolio we have two products that are tightly coupled to one each other. It is Luminate Demand Edge (LDE), our demand forecasting solution for Retail and Luminate Store Fulfilment (LSF), our solution to automated and optimized orders based on demand predictions. LSF takes the demand predictions of LSF and turns them into order proposals using sophisticated algorithms. In LDE, the customer is able to override the demand predictions generated by LDE and LSF would pickup those overridden demand predicitons automatically.","title":"The Products"},{"location":"story/#the-override-prediction-incident","text":"CC BY-SA 3.0 Daniel Case James is a supply chain specialist working at one of Blue yonder's customer, a grocery store and is responsible for the LSF product. Today, James has a very bad day, all shelves are empty in one of the stores. That's not good. But happened? It turns out, there is a big festival happeing next to this store. It turns out, Susan, a demand specialist working at the same customer but responsible for the demand predictions of LDE product indeed adjusted the demands using predictions overrides. But why were the orders not adjusted as well? LSF typically run at fixed daily schedules and if the prediction overrides are created after the LSF run already processed for the day, the predictions overrides will only be picked up at the next run which in this case was too late. James, who has some basic knowledge of programming, decides to use the extensibility features of the Luminate Platform and build a notification mechanism. This will help him to prevent any of these kind of incidents in the future. Let's help James and build this feature together with him!","title":"The Override Prediction Incident"},{"location":"workshop-walkthrough/","text":"The developer Portal Login First we login into the developer portal: https://bylumuiportalplpna.azureedge.net/home/ You need to enter the realm, which is by-developer for the developer portal. Then login with your account credentials. Navigate the portal After login you see the dashboard For now we are only interested in the \"App Gallery\" whoch shows all services and application that you have access to. The App Gallery view The API Catalog We now want to find out if there are APIs we can use to build our notification feature. For this we launch the API Catalog in the API Gallery Launch the API Catalog Inside the API Catalog, search for LDE. You then will find all the API exposed by LDE for you. You should find the \"Blue Yonder LDE Prediction Overrides v1\" API and click on it. Finding the LDE Prediction Overrides API in the API Catalog Once you clicked on it, you will be navigated to the API documentation. Documentation of the LDE Prediction Overrides API Here you can try our an API call by first clicking on the \"Try it out\" button and subsequently on the \"Execute\" button. You can try the API by clicking on \"Execute\" By exectuing this GET request we will get a list of all prediction overrides stored in the LDE instance. Hey, we have a list of all prediction overrides stored in the LDE instance! The response should look like this [ { \"processing_status\" : \"FINISHED\" , \"override_id\" : \"6caccdf4-eeef-4fb7-83b6-6e96b334719b\" , \"override_type\" : \"create\" , \"mode\" : \"workbench\" , \"product_column_name\" : null , \"location_column_name\" : null , \"value_column_name\" : null , \"creation_time\" : \"2022-04-25T22:17:22.563620+00:00\" , \"is_active\" : true , \"desired_is_active\" : true , \"last_update\" : \"2022-04-25T22:17:30.766706+00:00\" , \"creation_user\" : \"someone@youdelivers.com\" , \"last_updated_user\" : \"someone@youdelivers.com\" , \"reason\" : \"other\" , \"description\" : \"\" , \"min_affected_date\" : \"2022-04-28\" , \"max_affected_date\" : \"2022-05-17\" , \"number_clp_combination\" : 273 , \"number_rows\" : null , \"source\" : \"lde-ui\" , \"prediction_accuracy\" : null , \"override_accuracy\" : null }, ... ] For our purpose, we are only interested in the creation_time value. But just look what's there, endless possibilities for cool new features, right? Create LIAM m2m client Luminate Identy Access Management (LIAM) is the authentication and authorization service in the Luminate Platform. You are already logged in into the portal, so your identity is known to all services. But when we want to build a service accessing API's, it is not you accessing the APIs, but this service. This is what machine-to-machine clients (m2m client) are for in LIAM. So we can create new identities that we assign to services and give it any subset of roles and permissions that our own identy has. This is increasing security dramatically, as we can shape those permissions such that it is \"just enough\" to do the job. Through the \"scope\" we can limit which services can be accessed, so that even if this m2m client is leaked, it cannot be used for anything else that the anticipated use-case. We can create m2m clients in a self service in the Identity & Access application available in the app gallery. Access the Identity & Access application In the Identiy & Access application change to the \"Machines\" tab and with the \"+\" icon we can create a new m2m client for our workflow. Create a new m2m client using the \"+\" icon in the \"Machines\" tab In the pop-up give the m2m client a good name (that's hard, I know). As this is a shared environment, probably it is a good idea to append your name, so why not devcon-workshop-<yourname> . Note the Client ID and add a secret Note Don't forget to note the client secret and store it somewhere safe! (A password manager would be a good option) Copy the secret and store it somehwere safe Now we need to add the role to be able to access the LDE oeverrides API. This role is called lde-full-access , just start to type and select in the picker. Add the `lde.full-access` role That's it, we created a m2m client. Easy, right? Building the Workflow Now we now there is an API, we have a m2m client to be able to access this API. Now we need something to actually call the API and trigger actions based on the results. That is exactly what the \"Workflow\" feature is for. Start the ALM application in the app gallery","title":"The developer Portal"},{"location":"workshop-walkthrough/#the-developer-portal","text":"","title":"The developer Portal"},{"location":"workshop-walkthrough/#login","text":"First we login into the developer portal: https://bylumuiportalplpna.azureedge.net/home/ You need to enter the realm, which is by-developer for the developer portal. Then login with your account credentials.","title":"Login"},{"location":"workshop-walkthrough/#navigate-the-portal","text":"After login you see the dashboard For now we are only interested in the \"App Gallery\" whoch shows all services and application that you have access to. The App Gallery view","title":"Navigate the portal"},{"location":"workshop-walkthrough/#the-api-catalog","text":"We now want to find out if there are APIs we can use to build our notification feature. For this we launch the API Catalog in the API Gallery Launch the API Catalog Inside the API Catalog, search for LDE. You then will find all the API exposed by LDE for you. You should find the \"Blue Yonder LDE Prediction Overrides v1\" API and click on it. Finding the LDE Prediction Overrides API in the API Catalog Once you clicked on it, you will be navigated to the API documentation. Documentation of the LDE Prediction Overrides API Here you can try our an API call by first clicking on the \"Try it out\" button and subsequently on the \"Execute\" button. You can try the API by clicking on \"Execute\" By exectuing this GET request we will get a list of all prediction overrides stored in the LDE instance. Hey, we have a list of all prediction overrides stored in the LDE instance! The response should look like this [ { \"processing_status\" : \"FINISHED\" , \"override_id\" : \"6caccdf4-eeef-4fb7-83b6-6e96b334719b\" , \"override_type\" : \"create\" , \"mode\" : \"workbench\" , \"product_column_name\" : null , \"location_column_name\" : null , \"value_column_name\" : null , \"creation_time\" : \"2022-04-25T22:17:22.563620+00:00\" , \"is_active\" : true , \"desired_is_active\" : true , \"last_update\" : \"2022-04-25T22:17:30.766706+00:00\" , \"creation_user\" : \"someone@youdelivers.com\" , \"last_updated_user\" : \"someone@youdelivers.com\" , \"reason\" : \"other\" , \"description\" : \"\" , \"min_affected_date\" : \"2022-04-28\" , \"max_affected_date\" : \"2022-05-17\" , \"number_clp_combination\" : 273 , \"number_rows\" : null , \"source\" : \"lde-ui\" , \"prediction_accuracy\" : null , \"override_accuracy\" : null }, ... ] For our purpose, we are only interested in the creation_time value. But just look what's there, endless possibilities for cool new features, right?","title":"The API Catalog"},{"location":"workshop-walkthrough/#create-liam-m2m-client","text":"Luminate Identy Access Management (LIAM) is the authentication and authorization service in the Luminate Platform. You are already logged in into the portal, so your identity is known to all services. But when we want to build a service accessing API's, it is not you accessing the APIs, but this service. This is what machine-to-machine clients (m2m client) are for in LIAM. So we can create new identities that we assign to services and give it any subset of roles and permissions that our own identy has. This is increasing security dramatically, as we can shape those permissions such that it is \"just enough\" to do the job. Through the \"scope\" we can limit which services can be accessed, so that even if this m2m client is leaked, it cannot be used for anything else that the anticipated use-case. We can create m2m clients in a self service in the Identity & Access application available in the app gallery. Access the Identity & Access application In the Identiy & Access application change to the \"Machines\" tab and with the \"+\" icon we can create a new m2m client for our workflow. Create a new m2m client using the \"+\" icon in the \"Machines\" tab In the pop-up give the m2m client a good name (that's hard, I know). As this is a shared environment, probably it is a good idea to append your name, so why not devcon-workshop-<yourname> . Note the Client ID and add a secret Note Don't forget to note the client secret and store it somewhere safe! (A password manager would be a good option) Copy the secret and store it somehwere safe Now we need to add the role to be able to access the LDE oeverrides API. This role is called lde-full-access , just start to type and select in the picker. Add the `lde.full-access` role That's it, we created a m2m client. Easy, right?","title":"Create LIAM m2m client"},{"location":"workshop-walkthrough/#building-the-workflow","text":"Now we now there is an API, we have a m2m client to be able to access this API. Now we need something to actually call the API and trigger actions based on the results. That is exactly what the \"Workflow\" feature is for. Start the ALM application in the app gallery","title":"Building the Workflow"}]}